{"version":3,"file":"todo-class.js","sourceRoot":"","sources":["../src/todo-class/todo-class.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,MAAM,KAAK,CAAC;AAC5C,OAAO,EAAE,aAAa,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAC;AAGlD,IAAM,OAAO,GAAb,MAAM,OAAQ,SAAQ,UAAU;IAAhC;;QA0CG,UAAK,GAAa,EAAE,CAAC;QAGrB,YAAO,GAAW,EAAE,CAAC;IA0C/B,CAAC;IAxCS,WAAW,CAAC,CAAQ;QAC1B,MAAM,MAAM,GAAG,CAAC,CAAC,MAA0B,CAAC;QAC5C,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC;IAC9B,CAAC;IAEO,WAAW,CAAC,CAAgB;QAClC,IAAI,CAAC,CAAC,GAAG,KAAK,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;YAC7C,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;YAClD,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QACpB,CAAC;IACH,CAAC;IAEO,UAAU,CAAC,KAAa;QAC9B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC;IACxD,CAAC;IAEQ,MAAM;QACb,OAAO,IAAI,CAAA;;;;;mBAKI,IAAI,CAAC,OAAO;mBACZ,IAAI,CAAC,WAAW;mBAChB,IAAI,CAAC,WAAW;;;;YAIvB,IAAI,CAAC,KAAK,CAAC,GAAG,CACd,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC,IAAI,CAAA;;kBAEf,IAAI;iCACW,GAAG,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;;aAEhD,CACF;;;KAGN,CAAC;IACJ,CAAC;;AArFe,cAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAsC3B,AAtCqB,CAsCpB;AAGM;IADP,KAAK,EAAE;sCACqB;AAGrB;IADP,KAAK,EAAE;wCACqB;AA7ClB,OAAO;IADnB,aAAa,CAAC,UAAU,CAAC;GACb,OAAO,CAuFnB","sourcesContent":["import { LitElement, html, css } from 'lit';\nimport { customElement, state } from 'lit/decorators.js';\n\n@customElement('todo-app')\nexport class TodoApp extends LitElement {\n  static override styles = css`\n    :host {\n      display: block;\n      max-width: 500px;\n      margin: 0 auto;\n      padding: 20px;\n      font-family: Arial, sans-serif;\n    }\n\n    input {\n      width: calc(100% - 20px);\n      padding: 8px;\n      margin-bottom: 10px;\n    }\n\n    ul {\n      list-style: none;\n      width: 100%;\n      padding: 0;\n      min-height: 30px;\n      border: 1px solid gray;\n    }\n\n    li {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      padding: 8px 0;\n      border-bottom: 1px solid #ddd;\n    }\n\n    button {\n      background-color: blue;\n      color: white;\n      border: none;\n      padding: 5px 10px;\n      cursor: pointer;\n    }\n  `;\n\n  @state()\n  private todos: string[] = [];\n\n  @state()\n  private newTodo: string = '';\n\n  private handleInput(e: Event) {\n    const target = e.target as HTMLInputElement;\n    this.newTodo = target.value;\n  }\n\n  private handleKeyUp(e: KeyboardEvent): void {\n    if (e.key === 'Enter' && this.newTodo.trim()) {\n      this.todos = [...this.todos, this.newTodo.trim()];\n      this.newTodo = '';\n    }\n  }\n\n  private removeTodo(index: number): void {\n    this.todos = this.todos.filter((_, i) => i !== index);\n  }\n\n  override render() {\n    return html`\n      <div>\n        <h1>Todo</h1>\n        <input\n          type=\"text\"\n          .value=${this.newTodo}\n          @input=${this.handleInput}\n          @keyup=${this.handleKeyUp}\n          placeholder=\"new todo\"\n        >\n        <ul>\n          ${this.todos.map(\n            (todo, index) => html`\n              <li>\n                ${todo}\n                <button @click=${() => this.removeTodo(index)}>삭제</button>\n              </li>\n            `\n          )}\n        </ul>\n      </div>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'todo-app': TodoApp;\n  }\n}\n"]}