{"version":3,"file":"todo-app.js","sourceRoot":"","sources":["../src/todo/todo-app.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,EAAkB,MAAM,KAAK,CAAC;AAInD,IAAI,KAAK,GAAW,EAAE,CAAC;AACvB,IAAI,OAAO,GAAW,EAAE,CAAC;AAEzB,MAAM,WAAW,GAAG,CAAC,QAAgB,EAAQ,EAAE;IAC7C,KAAK,GAAG,QAAQ,CAAC;AACnB,CAAC,CAAC;AAEF,MAAM,WAAW,GAAG,CAAC,CAAQ,EAAQ,EAAE;IACrC,MAAM,MAAM,GAAG,CAAC,CAAC,MAA0B,CAAC;IAC5C,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC;AACzB,CAAC,CAAC;AAEF,MAAM,WAAW,GAAG,CAAC,CAAgB,EAAQ,EAAE;IAC7C,IAAI,CAAC,CAAC,GAAG,KAAK,OAAO,IAAI,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;QACxC,WAAW,CAAC,CAAC,GAAG,KAAK,EAAE,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;QACxC,OAAO,GAAG,EAAE,CAAC;IACf,CAAC;AACH,CAAC,CAAC;AAEF,MAAM,UAAU,GAAG,CAAC,KAAa,EAAQ,EAAE;IACzC,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC;AACnD,CAAC,CAAC;AAEF,MAAM,OAAO,GAAG,GAAmB,EAAE,CAAC,IAAI,CAAA;;;;;eAK3B,OAAO;eACP,WAAW;eACX,WAAW;;;;;QAKlB,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE,CAAC,IAAI,CAAA;;YAE3B,IAAI;2BACW,GAAG,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC;;;;OAI3C,CAAC;;;CAGP,CAAC;AAEF,MAAM,cAAe,SAAQ,WAAW;IACtC,iBAAiB;QACf,MAAM,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC,CAAC;IAC1B,CAAC;CACF;AAED,cAAc,CAAC,MAAM,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC","sourcesContent":["import { html, render, TemplateResult } from 'lit';\n\ntype Todo = string;\n\nlet todos: Todo[] = [];\nlet newTodo: string = '';\n\nconst updateTodos = (newTodos: Todo[]): void => {\n  todos = newTodos;\n};\n\nconst handleInput = (e: Event): void => {\n  const target = e.target as HTMLInputElement;\n  newTodo = target.value;\n};\n\nconst handleKeyUp = (e: KeyboardEvent): void => {\n  if (e.key === 'Enter' && newTodo.trim()) {\n    updateTodos([...todos, newTodo.trim()]);\n    newTodo = '';\n  }\n};\n\nconst removeTodo = (index: number): void => {\n  updateTodos(todos.filter((_, i) => i !== index));\n};\n\nconst TodoApp = (): TemplateResult => html`\n  <div style=\"max-width: 400px; margin: 0 auto; padding: 20px; font-family: Arial, sans-serif;\">\n    <h1>Todo 리스트</h1>\n    <input\n      type=\"text\"\n      .value=${newTodo}\n      @input=${handleInput}\n      @keyup=${handleKeyUp}\n      placeholder=\"새로운 할 일 추가!!\"\n      style=\"width: 100%; padding: 8px; margin-bottom: 10px;\"\n    >\n    <ul style=\"list-style-type: none; padding: 0;\">\n      ${todos.map((todo, index) => html`\n        <li style=\"display: flex; justify-content: space-between; align-items: center; padding: 8px 0; border-bottom: 1px solid #ddd;\">\n          ${todo}\n          <button @click=${() => removeTodo(index)} style=\"background-color: #f44336; color: white; border: none; padding: 5px 10px; cursor: pointer;\">\n            삭제\n          </button>\n        </li>\n      `)}\n    </ul>\n  </div>\n`;\n\nclass TodoAppElement extends HTMLElement {\n  connectedCallback() {\n    render(TodoApp(), this);\n  }\n}\n\ncustomElements.define('todo-app', TodoAppElement);"]}